
---
// src/components/Header.astro - Styled Version 1
import { getCollection } from 'astro:content';
import { getBlogTranslation } from '../utils/i18n';
import { Icon } from 'astro-icon/components';

const currentPath = Astro.url.pathname;
const currentLocale = Astro.currentLocale || (currentPath.startsWith('/ar') ? 'ar' : 'en');
const siteTitle = 'Abdla';
let alternateLocale = currentLocale === 'en' ? 'ar' : 'en';
let alternateLocaleName = currentLocale === 'en' ? 'العربية' : 'English';
let alternatePath = '';

const blogPostMatch = currentPath.match(new RegExp(`/${currentLocale}/blog/([^/]+)`));
if (blogPostMatch) {
  const slug = `${currentLocale}/${blogPostMatch[1]}`;
  const allPosts = await getCollection('blog');
  const currentPost = allPosts.find(post => post.slug === slug);

  if (currentPost) {
    const translatedPost = await getBlogTranslation(currentPost);
    if (translatedPost) {
      alternatePath = `/${alternateLocale}/blog/${translatedPost.slug.split('/').pop()}`;
    } else {
      alternatePath = `/${alternateLocale}/blog/`;
    }
  }
} else {
  alternatePath = currentPath.replace(new RegExp(`^/${currentLocale}`), `/${alternateLocale}`);
}

if (!alternatePath || alternatePath === currentPath) {
  alternatePath = `/${alternateLocale}/`;
}

const navLinks = [
    { name: currentLocale === 'en' ? 'Base' : 'الواجهة', href: `/${currentLocale}/` },
    { name: currentLocale === 'en' ? 'Blog' : 'المدونة', href: `/${currentLocale}/blog/` },
    { name: currentLocale === 'en' ? 'Behind the Dunes?' : 'من وراء الكثبان؟', href: `/${currentLocale}/about/` },
    { name: currentLocale === 'en' ? 'Send a Signal' : 'أرسل إشارة', href: `/${currentLocale}/contact/` },
];
---
<header class="header-top">
  <div class="container mx-auto flex flex-wrap items-center justify-between p-4 gap-x-6 gap-y-2">
    <div class="site-title text-2xl font-bold tracking-tight">
      <a href={`/${currentLocale}/`} class="hover:text-neon-yellow transition-colors duration-200">{siteTitle}</a>
    </div>

    <button id="menuButton" class="md:hidden text-cool-light-gray hover:text-neon-yellow">
      <Icon name="mdi:menu" class="w-6 h-6" />
    </button>

    <nav id="navMenu" class="hidden w-full md:flex md:w-auto md:gap-8 text-base items-center">
      <div class="flex flex-col md:flex-row gap-4 md:gap-8 mt-4 md:mt-0">
        {navLinks.map(link => {
          const isActive = currentPath === link.href || (link.href !== `/${currentLocale}/` && currentPath.startsWith(link.href));
          return (
            <a
              href={link.href}
              class:list={[
                "pb-1 border-b-2 transition-colors duration-200",
                isActive
                  ? "border-neon-yellow text-neon-yellow"
                  : "border-transparent hover:border-neon-yellow/70 hover:text-cool-light-gray/80"
              ]}
            >
              {link.name}
            </a>
          );
        })}
        {alternateLocale && !currentPath.includes('/tags/') && (
          <a 
            href={alternatePath} 
            class={`px-3 py-1 rounded-full border border-white/30 text-white hover:bg-white hover:text-electric-blue transition-all duration-200 text-sm font-medium ${currentLocale === 'en' ? 'font-arabic-body' : ''}`}
            title={alternateLocaleName}
          >
            {currentLocale === 'en' ? 'عربي' : 'EN'}
          </a>
        )}
        <button id="themeToggle" class="md:ml-4">
          <Icon name="mdi:theme-light-dark" class="w-6 h-6" />
        </button>
      </div>
    </nav>
  </div>
</header>

<script>
  const menuButton = document.getElementById('menuButton');
  const navMenu = document.getElementById('navMenu');

  menuButton?.addEventListener('click', () => {
    navMenu?.classList.toggle('hidden');
  });

  // Theme toggle logic
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme');
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  if (theme === 'light') {
    document.documentElement.classList.remove('dark');
  } else {
    document.documentElement.classList.add('dark');
  }

  window.localStorage.setItem('theme', theme);

  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  }

  document.getElementById("themeToggle")?.addEventListener("click", handleToggleClick);
</script>
