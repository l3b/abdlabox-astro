---
// src/pages/ar/blog/[slug].astro - Code Block Readability Fix
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { getBlogTranslation } from '../../../utils/i18n';

// Generate static paths for Arabic posts
export async function getStaticPaths() {
  const allArabicPosts = await getCollection('blog', ({ data }) => {
    return data.language === 'ar' && data.isDraft !== true;
  });
  return allArabicPosts.map(post => ({
    params: { slug: post.slug.replace(/^ar\//, '') }, // Use slug without prefix for param
    props: { post },
  }));
}

type Props = { post: CollectionEntry<'blog'> };
const { post } = Astro.props;
const { Content } = await post.render();
const translatedPost = await getBlogTranslation(post);
const allPosts = await getCollection('blog', ({ data }) => data.language === 'ar' && !data.isDraft);
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const currentIndex = sortedPosts.findIndex(p => p.slug === post.slug);
const prevPost = currentIndex < sortedPosts.length - 1 ? sortedPosts[currentIndex + 1] : null;
const nextPost = currentIndex > 0 ? sortedPosts[currentIndex - 1] : null;

import { getReadingTime } from '../../../utils/readingTime';
const readingTime = getReadingTime(post.body);

const pageTitle = post.data.title;
const pageDescription = post.data.description;

// Sample tags data -  Replace with your actual data source
import { tags } from '../../../data/tags';


---
<BaseLayout title={pageTitle} description={pageDescription} lang="ar" dir="rtl">
  {/* Centered container with padding */}
  <div class="container mx-auto px-4 py-8 md:px-6 md:py-12">
    <article>
      {/* Post Header Section */}
      <header class="mb-8 border-b border-gray-300 pb-6">
        {/* Post Title - Near Black text, Neon Yellow bottom border */}
        <h1 class="inline-block text-3xl md:text-4xl font-bold mb-3 text-soft-charcoal pb-2 border-b-2 border-b-neon-yellow">
          {post.data.title}
        </h1>
        {/* Metadata */}
        <div class="text-sm text-gray-600 flex flex-wrap items-center gap-x-4 gap-y-2 mt-3">
          <span>
            نُشر في: {post.data.pubDate.toLocaleDateString('ar-SA', { year: 'numeric', month: 'long', day: 'numeric' })} {/* Arabic Date Format */}
          </span>
          {/* Author removed */}
          {post.data.tags && post.data.tags.length > 0 && (
            <span class="flex items-center gap-x-1.5 flex-wrap">
              تصنيفات: {/* Arabic Label */}
              {post.data.tags.map(tag => {
                const normalizedTag = tag.replace(/\s+/g, '-');
                const tagLink = `/ar/tags/${normalizedTag}`;

                return (
                  <a href={tagLink} class="tag">
                    {tag}
                  </a>
                );
              })}
            </span>
          )}
        <div class="text-sm text-gray-600 mt-2">
            وقت القراءة: {readingTime} دقيقة
          </div>
        </div>
        {post.data.featuredImage && (
          <figure class="mt-6">
            <img 
              src={post.data.featuredImage.url} 
              alt={post.data.featuredImage.alt}
              class="w-full h-auto rounded-lg shadow-lg"
            />
            {post.data.featuredImage.caption && (
              <figcaption class="text-center text-gray-600 mt-2 text-sm">
                {post.data.featuredImage.caption}
              </figcaption>
            )}
          </figure>
        )}
      </header>

      <nav class="flex justify-between mb-8 text-sm">
        {nextPost && (
          <a href={`/ar/blog/${nextPost.slug.replace(/^ar\//, '')}`} class="text-teal-600 hover:text-lavender">
            ← {nextPost.data.title}
          </a>
        )}
        {prevPost && (
          <a href={`/ar/blog/${prevPost.slug.replace(/^ar\//, '')}`} class="text-teal-600 hover:text-lavender mr-auto">
            {prevPost.data.title} →
          </a>
        )}
      </nav>

      {/* Main Post Content - Apply 'prose' classes here */}
      {/* Ensure these classes match the English version */}
      <div
        class="
          prose prose-lg max-w-none mt-8
          prose-headings:font-semibold prose-headings:text-soft-charcoal
          prose-p:text-soft-charcoal !prose-p:text-soft-charcoal prose-p:leading-relaxed
          prose-a:text-teal-600 prose-a:underline hover:prose-a:text-lavender
          prose-strong:text-soft-charcoal prose-strong:font-semibold
          prose-blockquote:border-l-electric-blue prose-blockquote:pl-4 prose-blockquote-rtl:border-r-electric-blue prose-blockquote-rtl:border-l-0 prose-blockquote-rtl:pr-4 prose-blockquote-rtl:pl-0 prose-blockquote:italic
          prose-li:marker:text-electric-blue
          prose-pre:bg-soft-charcoal prose-pre:text-gray-200 prose-pre:p-4 prose-pre:rounded-lg prose-pre:overflow-x-auto
          /* prose-code:* utilities removed */
          dark:prose-invert dark:prose-headings:text-cool-light-gray dark:prose-p:text-gray-300 dark:prose-strong:text-cool-light-gray dark:prose-a:text-teal dark:hover:prose-a:text-lavender dark:prose-blockquote:border-l-teal dark:prose-blockquote-rtl:border-r-teal dark:prose-blockquote-rtl:border-l-0 dark:prose-li:marker:text-teal dark:prose-pre:bg-gray-800/80 dark:prose-pre:text-gray-200
        "
      >
        <Content />
      </div>

    </article>
  </div>
</BaseLayout>