---
// src/pages/en/contact.astro - Styled Version
import BaseLayout from '../../layouts/BaseLayout.astro';
import { Icon } from 'astro-icon/components';
// Make sure this path and extension (.ts, .yaml, .js) matches your data file!
import socialLinks from '../../data/socialLinks.ts';

const pageTitle = "Send a Signal";
const pageDescription = "We may not know each other, but sometimes, our signals just happen to align.";

// Group links by category (logic remains the same)
const linkCategories = socialLinks.reduce((acc, link) => {
  const category = link.category || 'Other';
  if (!acc[category]) { acc[category] = []; }
  acc[category].push(link);
  return acc;
}, {} as Record<string, typeof socialLinks>);

const categoryOrder = ['Professional', 'Writing', 'Activity', 'Learning', 'Reading', 'Media', 'Other'];
const sortedCategories = Object.keys(linkCategories).sort((a, b) => {
    const indexA = categoryOrder.indexOf(a);
    const indexB = categoryOrder.indexOf(b);
    if (indexA === -1 && indexB === -1) return a.localeCompare(b);
    if (indexA === -1) return 1;
    if (indexB === -1) return -1;
    return indexA - indexB;
});

const calComUrl = "https://cal.com/your-username"; // !! Replace with your actual Cal.com link !!
---
{/* Ensure BaseLayout props are set for English */}
<BaseLayout title={pageTitle} description={pageDescription} lang="en" dir="ltr">
  <div class="container mx-auto px-4 py-8 md:px-6 md:py-12">

    {/* Page Title - Use margin-end (me-3) for emoji in LTR */}
    <h1 class="inline-block text-3xl md:text-4xl font-bold mb-8 text-soft-charcoal pb-2 border-b-2 border-b-neon-yellow">
      <span class="me-3">üì°</span>{pageTitle}
    </h1>

    {/* Intro content area */}
    <div class="max-w-prose space-y-6 text-lg leading-relaxed mb-12 text-soft-charcoal">
      <p>We may not know each other,</p>
      <p>
        but sometimes, our signals just happen to align.
        If you‚Äôve made it this far, perhaps you have something worth sharing ‚Äî a thought, a note, or even a quiet curiosity.
      </p>
      <p>
        You can send your signal through the form below,
        find a good time to connect in real-time (virtually),
        or simply follow my trail across the digital dunes.
      </p>
    </div>

    {/* Sections in a Grid */}
    <div class="grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-10">

      {/* Left Column (Form & Scheduling) */}
      <div class="space-y-10">
        {/* Contact Form Section */}
        <section>
          <h2 class="text-2xl font-semibold mb-4 text-electric-blue flex items-center gap-2">
             <span class="text-2xl">‚úçÔ∏è</span>Signal Form
          </h2>
          <p class="text-gray-600 mb-4">(Name ‚Äì Email ‚Äì Message)</p>
           {/* Formspree Form */}
           <form action="https://formspree.io/f/xgvkewgp" method="POST" class="space-y-4">
              <div>
                <label for="name" class="block mb-1 font-medium text-gray-700 dark:text-gray-300">Name</label>
                <input type="text" id="name" name="name" required class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-neon-yellow focus:border-transparent dark:bg-gray-700 dark:border-gray-600"/>
              </div>
              <div>
                <label for="email" class="block mb-1 font-medium text-gray-700 dark:text-gray-300">Email</label>
                <input type="email" id="email" name="_replyto" required class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-neon-yellow focus:border-transparent dark:bg-gray-700 dark:border-gray-600"/>
              </div>
              <div>
                <label for="message" class="block mb-1 font-medium text-gray-700 dark:text-gray-300">Message</label>
                <textarea id="message" name="message" rows="5" required class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-neon-yellow focus:border-transparent dark:bg-gray-700 dark:border-gray-600"></textarea>
              </div>
              <div>
                <button type="submit" class="button">
                  Send Signal
                </button>
              </div>
            </form>
           <p class="text-sm text-gray-500 mt-3">Drop me a message ‚Äî I‚Äôll get back to you once the signal is received.</p>
        </section>

        {/* Scheduling Section */}
        <section>
           <h2 class="text-2xl font-semibold mb-4 text-electric-blue flex items-center gap-2">
             <span class="text-2xl">üóìÔ∏è</span>Schedule a Direct Signal
          </h2>
           <p class="mb-4 text-lg">
             Hit the button below to book a time via cal.com:
           </p>
           {/* Cal.com Trigger Button */}
           <button
             type="button"
             data-cal-link="abdla/30min"  /* Use your specific Cal link ID */
             data-cal-namespace="30min" /* Optional namespace */
             data-cal-config='{"layout":"month_view"}' /* Optional config */
             class="button"
           >
             Book a Meeting
           </button>
           <p class="text-gray-600 mt-3">15 or 30 minutes ‚Äî choose whatever fits your flow.</p>
        </section>
      </div>

      {/* Right Column (Other Signals / Links) */}
      <section>
         <h2 class="text-2xl font-semibold mb-4 text-electric-blue flex items-center gap-2">
            <span class="text-2xl">üåê</span>Other Signals
         </h2>
         <p class="text-gray-600 mb-6">Prefer to connect or follow through other digital trails? You can find me here too:</p>

         {/* Loop through sorted categories */}
         {sortedCategories.map(category => (
            <div class="mb-6">
                {/* Optional: Category Name */}
                {/* <h3 class="text-sm font-semibold uppercase text-gray-500 tracking-wider mb-3">{category}</h3> */}

                {/* Centered Flexbox layout for icons */}
                <div class="flex gap-2 items-center">
                    {linkCategories[category].map(link => (
                        <a
                            href={link.url}
                            target="_blank"
                            rel="noopener noreferrer me"
                            aria-label={link.name}
                            title={link.name}
                            class="p-3 group social-icon-link text-lavender hover:text-electric-blue transition-all duration-200 hover:scale-110 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800"
                        >
                            <Icon
                                name={link.icon}
                                class="w-8 h-8"
                             />
                            <span class="sr-only">{link.name}</span>
                        </a>
                    ))}
                </div>
            </div>
         ))}
      </section>

    </div> {/* End grid */}

    {/* Closing Section */}
    <section class="mt-16 pt-8 border-t border-gray-300 text-center max-w-prose mx-auto">
        <h2 class="text-xl font-semibold mb-3 text-electric-blue">
           {/* Using satellite emoji for English too */}
          <span class="me-2">üõ∞Ô∏è</span>Until the Signal Blinks Again
        </h2>
        <p class="text-lg text-gray-600 leading-relaxed">
            Your presence here already means a lot.<br/>
            Read, reach out, or simply pass by ‚Äî the signal has landed.
        </p>
    </section>

  </div>

  {/* Cal.com Embed Script - can remain the same as it's language-agnostic */}
  <script type="text/javascript" is:inline>
    (function (C, A, L) { let p = function (a, ar) { a.q.push(ar); }; let d = C.document; C.Cal = C.Cal || function () { let cal = C.Cal; let ar = arguments; if (!cal.loaded) { cal.ns = {}; cal.q = cal.q || []; d.head.appendChild(d.createElement("script")).src = A; cal.loaded = true; } if (ar[0] === L) { const api = function () { p(api, arguments); }; const namespace = ar[1]; api.q = api.q || []; if(typeof namespace === "string"){cal.ns[namespace] = cal.ns[namespace] || api;p(cal.ns[namespace], ar);p(cal, ["initNamespace", namespace]);} else p(cal, ar); return;} p(cal, ar); }; })(window, "https://app.cal.com/embed/embed.js", "init");
    Cal("init", "30min", {origin:"https://cal.com"});
    Cal.ns["30min"]("ui", {"cssVarsPerTheme":{"light":{"cal-brand":"#1E2430"},"dark":{"cal-brand":"#cacabd"}},"hideEventTypeDetails":false,"layout":"month_view"});
  </script>
</BaseLayout>