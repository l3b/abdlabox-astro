
---
import BaseLayout from '../../layouts/BaseLayout.astro';

const url = Astro.url;
const lang = url.searchParams.get('lang') || 'en';
const isArabic = lang === 'ar';
---

<BaseLayout title="Create New Post" description="Create a new blog post">
  <div class="container mx-auto px-4 py-8 max-w-4xl">
    <div class="flex items-center mb-8">
      <a href="/admin" class="text-electric-blue hover:underline mr-4">← Back to Admin</a>
      <h1 class="text-3xl font-bold">
        {isArabic ? 'إنشاء تدوينة جديدة' : 'Create New Post'}
      </h1>
    </div>

    <form id="post-form" class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 space-y-6">
      <input type="hidden" name="language" value={lang}>
      
      <!-- Title -->
      <div>
        <label for="title" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          {isArabic ? 'العنوان' : 'Title'}
        </label>
        <input 
          type="text" 
          id="title" 
          name="title" 
          required
          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-electric-blue focus:border-electric-blue dark:bg-gray-700 dark:text-white"
          dir={isArabic ? 'rtl' : 'ltr'}
        />
      </div>

      <!-- Description -->
      <div>
        <label for="description" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          {isArabic ? 'الوصف' : 'Description'}
        </label>
        <textarea 
          id="description" 
          name="description" 
          rows="3"
          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-electric-blue focus:border-electric-blue dark:bg-gray-700 dark:text-white"
          dir={isArabic ? 'rtl' : 'ltr'}
        ></textarea>
      </div>

      <!-- Tags -->
      <div>
        <label for="tags" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          {isArabic ? 'الكلمات المفتاحية' : 'Tags (comma separated)'}
        </label>
        <input 
          type="text" 
          id="tags" 
          name="tags" 
          placeholder={isArabic ? 'تقنية، تطوير، ذكاء اصطناعي' : 'technology, web development, AI'}
          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-electric-blue focus:border-electric-blue dark:bg-gray-700 dark:text-white"
          dir={isArabic ? 'rtl' : 'ltr'}
        />
      </div>

      <!-- Content -->
      <div>
        <label for="content" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
          {isArabic ? 'المحتوى (Markdown)' : 'Content (Markdown)'}
        </label>
        <textarea 
          id="content" 
          name="content" 
          rows="15"
          required
          placeholder={isArabic ? 'اكتب محتوى التدوينة هنا...' : 'Write your blog post content here...'}
          class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-electric-blue focus:border-electric-blue dark:bg-gray-700 dark:text-white font-mono"
          dir={isArabic ? 'rtl' : 'ltr'}
        ></textarea>
      </div>

      <!-- Draft Option -->
      <div class="flex items-center">
        <input 
          type="checkbox" 
          id="isDraft" 
          name="isDraft" 
          class="h-4 w-4 text-electric-blue focus:ring-electric-blue border-gray-300 rounded"
        />
        <label for="isDraft" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
          {isArabic ? 'حفظ كمسودة' : 'Save as draft'}
        </label>
      </div>

      <!-- Submit Button -->
      <div class="flex justify-end space-x-4">
        <button 
          type="button"
          onclick="generatePreview()"
          class="px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700"
        >
          {isArabic ? 'معاينة' : 'Preview'}
        </button>
        <button 
          type="submit"
          class="px-6 py-2 bg-electric-blue text-white rounded-md hover:bg-blue-600 focus:ring-2 focus:ring-electric-blue focus:ring-offset-2"
        >
          {isArabic ? 'إنشاء التدوينة' : 'Create Post'}
        </button>
      </div>
    </form>

    <!-- Preview Area -->
    <div id="preview-area" class="hidden mt-8 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
      <h3 class="text-xl font-semibold mb-4">Preview</h3>
      <div id="preview-content" class="prose dark:prose-invert max-w-none"></div>
    </div>
  </div>

  <script>
    function generatePreview() {
      const title = document.getElementById('title').value;
      const content = document.getElementById('content').value;
      const previewArea = document.getElementById('preview-area');
      const previewContent = document.getElementById('preview-content');
      
      if (title && content) {
        previewContent.innerHTML = `
          <h1>${title}</h1>
          <div>${content.replace(/\n/g, '<br>')}</div>
        `;
        previewArea.classList.remove('hidden');
      }
    }

    document.getElementById('post-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const postData = {
        title: formData.get('title'),
        description: formData.get('description'),
        tags: formData.get('tags').split(',').map(tag => tag.trim()).filter(tag => tag),
        content: formData.get('content'),
        language: formData.get('language'),
        isDraft: formData.get('isDraft') === 'on'
      };

      // Generate filename from title
      const filename = postData.title
        .toLowerCase()
        .replace(/[^a-z0-9\u0600-\u06FF\s-]/g, '')
        .replace(/\s+/g, '-')
        .replace(/-+/g, '-')
        .trim();

      // Generate frontmatter
      const frontmatter = `---
title: "${postData.title}"
description: "${postData.description}"
pubDate: ${new Date().toISOString().split('T')[0]}
language: "${postData.language}"
tags: [${postData.tags.map(tag => `"${tag}"`).join(', ')}]
isDraft: ${postData.isDraft}
---

`;

      const fullContent = frontmatter + postData.content;
      
      // Create download link
      const blob = new Blob([fullContent], { type: 'text/markdown' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${filename}.md`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);

      alert(`Post file "${filename}.md" has been generated! Please save it to:
- For English: src/content/blog/en/
- For Arabic: src/content/blog/ar/`);
    });
  </script>
</BaseLayout>
